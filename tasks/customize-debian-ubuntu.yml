### CUSTOMIZE ###
# Debian, Ubuntu

- name: Check for zsh customizations.
  vars:
    vm_zsh: "{{ vm_zsh }}"
  command: echo "{{ vm_zsh }}"
  register: iszsh
  when:
    vm_zsh is search('true')

- name: Move the original /etc/motd to back it up (once).
  command: mv /etc/motd /etc/motd.original
  args:
    creates: /etc/motd.original
  when: ansible_distribution == 'Debian'

- name: Copy the file which will show a welcome motd after login.
  copy:
    src: 20-motd-welcome
    dest: /etc/update-motd.d/20-motd-welcome
    mode: a+x
  when: ansible_distribution == 'Debian'

- name: Remove Ubuntu help-text from motd.
  file:
    path: /etc/update-motd.d/10-help-text
    mode: a-x
  when: ansible_distribution == 'Ubuntu'

# this file is apparently not present in some installations
- name: Check if livepatch motd file exists.
  stat:
    path: /etc/update-motd.d/80-livepatch
  register: file_result

- name: Remove Ubuntu livepatch notifications from motd.
  file:
    path: /etc/update-motd.d/80-livepatch
    mode: a-x
  when: ansible_distribution == 'Ubuntu' and file_result.stat.exists

- name: upgrade software
  command: /opt/software/bin/upgrade
  args:
    removes: etc/software/software.conf.upgrade

- name: Remove Ubuntu ads from motd
  lineinfile:
    path: /etc/default/motd-news
    state: present
    regexp: '^ENABLED='
    line: 'ENABLED=0'
  when: ansible_distribution == 'Ubuntu'

- name: Remove legal notice from Ubuntu user logins.
  copy:
    content: " "
    dest: /etc/legal
  when: ansible_distribution == 'Ubuntu'

- name: Add a block of commands in the default user profile.
  blockinfile:
    path: "/home/{{ iserver_user }}/.profile"
    block: |
      {{ iserver_user_profile }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK"

- name: Add a block of bashrc config to root and the default user (Debian).
  blockinfile:
    path: "{{ item }}/.bashrc"
    block: |
      {{ iserver_bashrc_debian }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
  loop: "{{ iserver_users_dirs }}"
  when: ansible_distribution == 'Debian'

- name: Add a block of bashrc config to root and the default user (Ubuntu).
  blockinfile:
    path: "{{ item }}/.bashrc"
    block: |
      {{ iserver_bashrc_ubuntu }}
    marker: "# {mark} ANSIBLE MANAGED BLOCK"
  loop: "{{ iserver_users_dirs }}"
  when: ansible_distribution == 'Ubuntu'

- name: Customize default user bashrc - prompt is blue.
  lineinfile:
    path: /home/{{ iserver_user }}/.bashrc
    line: 'export PS1="\[\033[1;34m\][\u@\h:\w]$\[\033[0m\] "'

- name: Customize root bashrc - prompt is red.
  lineinfile:
    path: /root/.bashrc
    line: 'export PS1="\[\033[1;31m\][\u@\h:\w]#\[\033[0m\] "'

- name: Ensure that Oh My Zsh is installed.
  become_user: "{{ iserver_user }}"
  shell: |
    curl -fsSl https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh -o install-ohmyzsh.sh
    chmod +x install-ohmyzsh.sh
    ./install-ohmyzsh.sh --unattended
    rm install-ohmyzsh.sh
  args:
    chdir: "/home/{{ iserver_user }}"
    warn: no
  set_fact:
    zsh_path: "/home/{{ iserver_user }}/.oh-my-zsh"
  when: iszsh.changed

- name: Ensure that Oh My Zsh plugins are installed.
  become_user: "{{ iserver_user }}"
  git:
    repo: https://github.com/MichaelAquilina/zsh-you-should-use.git
    dest: "{{ zsh_path }}/plugins/you-should-use"
    depth: '1'
  when: iszsh.changed

- name: Ensure that Oh My Zsh plugins are installed.
  become_user: "{{ iserver_user }}"
  git:
    repo: https://github.com/zsh-users/zsh-autosuggestions
    dest: "{{ zsh_path }}/plugins/zsh-autosuggestions"
    depth: '1'
  when: iszsh.changed

- name: Ensure that Oh My Zsh plugins are installed.
  become_user: "{{ iserver_user }}"
  git:
    repo: https://github.com/zsh-users/zsh-history-substring-search
    dest: "{{ zsh_path }}/plugins/zsh-history-substring-search"
    depth: '1'
  when: iszsh.changed

- name: Ensure that Oh My Zsh plugins are installed.
  become_user: "{{ iserver_user }}"
  git:
    repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
    dest: "{{ zsh_path }}/plugins/zsh-syntax-highlighting"
    depth: '1'
  when: iszsh.changed

- name: Ensure that Oh My Zsh plugins are installed.
  become_user: "{{ iserver_user }}"
  git:
    repo: https://github.com/romkatv/powerlevel10k.git
    dest: "{{ zsh_path }}/custom/themes/powerlevel10k"
    depth: '1'
  when: iszsh.changed

- name: Copy the user's .zshrc.
  become_user: "{{ iserver_user }}"
  copy:
    src: 30-zshrc
    dest: "/home/{{ iserver_user }}/.zshrc"
    mode: a+x
  when: iszsh.changed

- name: Copy the user's .p10k.zsh.
  become_user: "{{ iserver_user }}"
  copy:
    src: 40-p10k
    dest: "/home/{{ iserver_user }}/.p10k.zsh"
    mode: a+x
  when: iszsh.changed

  # Alternately, could add a shell line to the next task,
  # but would still have to handle whether they wanted zsh.
- name: Change the user's shell to zsh.
  shell: "chsh -s /usr/bin/zsh -u {{ iserver_user }}"
  args:
    warn: no
  when: iszsh.changed

- name: Change user's account password to the ssh password."
  user:
    name: "{{ iserver_user }}"
    password: "{{ vm_password }}"
