### BASE PACKAGES ###
# Debian, Ubuntu

- name: Check for prod or dev role.
  vars:
    vm_role: "{{ vm_role }}"
  register: isdev
  command: echo vm_role
  when:
    vm_role == 'dev'

- name: Check for zfs support.
  vars:
    zfs: "{{ vm_zfs }}"
  register: iszfs
  command: echo iszfs
  when:
    vm_zfs == 'true'

# replaces sources.list repos.
- name: Move original /etc/apt/sources.list to back it up (once).
  command: mv /etc/apt/sources.list /etc/apt/sources.list.original
  args:
    creates: /etc/apt/sources.list.original

# this expects python-apt to be installed.
# at least two repos need to be defined. repos are added to sources.list.d/
- name: Add a set of specified repositories into sources list directory.
  apt_repository:
    repo: "{{ item }}"
    state: present
  loop: "{{ iserver_debian_repos }}"
  when: ansible_distribution == 'Debian'

- name: Add a set of specified repositories into sources list directory.
  apt_repository:
    repo: "{{ item }}"
    state: present
  loop: "{{ iserver_ubuntu_repos }}"
  when: ansible_distribution == 'Ubuntu'

# so that Ubuntu will not complain about missing sources.list
- name: Ensure that there is a sources.list file.
  copy:
    src: sources.list
    dest: /etc/apt/sources.list
    force: no

- name: Add custom repository keys.
  apt_key:
    url: "{{ item }}"
    loop: "{{ iserver_debian_custom_repo_keys }}"
    state: present
  when: (ansible_distribution == 'Debian') and (isdev is defined)

- name: Add custom repositories into sources list directory.
  apt_repository:
    repo: "{{ item }}"
    state: present
  loop: "{{ iserver_debian_custom_repos }}"
  when: (ansible_distribution == 'Debian') and (isdev is defined)

- name: Ensure that all packages are updated and upgraded.
  apt:
    upgrade: "yes"
    update_cache: yes
    cache_valid_time: 86400 #One day

- name: Ensure that initial packages are installed.
  apt:
    name: "{{ iserver_deb_packages }}"
    state: present

- name: Ensure that custom packages are installed.
  apt:
    name: "{{ iserver_custom_packages }}"
    state: present
  when: isdev is defined

- name: Ensure that Linux headers are installed.
  apt:
    name: "linux-headers-{{ ansible_kernel }}"
    state: present
  when: (isdev is defined) or (iszfs is defined)

- name: Ensure that micro is installed.
  shell: curl -fsSl https://getmic.ro | bash && mv micro /usr/local/bin
  args:
    warn: no

- name: Ensure that Python libraries are installed.
  vars:
      ansible_python_interpreter: /usr/bin/python3
  pip:
    name: "{{ iserver_pip_packages }}"
    state: present
  when: isdev is defined

- name: Ensure that Golang is installed.
  unarchive:
    src: https://golang.org/dl/go1.15.6.linux-amd64.tar.gz
    dest: /usr/local
    remote_src: yes
  when: isdev is defined

- name: Add GOPATH to system path.
  vars:
    extra_path = /usr/local/go/bin
  lineinfile:
    path: /etc/environment
    regexp: 'PATH=(["])((?!.*?{{ extra_path }}).*?)(["])$'
    line: 'PATH=\1\2:{{ extra_path }}\3'
    backrefs: yes
  when: (lookup('file', '/etc/environment') is search('^\s*PATH\s*=')) and (isdev is defined)

- name: Ensure that Terragrunt is installed.
  unarchive:
    src: https://github.com/gruntwork-io/terragrunt/releases/download/v0.26.7/terragrunt_linux_amd64
    dest: /usr/local/bin
    remote_src: yes
  when: isdev is defined

- name: Ensure that ZFS On Linux is installed.
  apt:
    name: "{{ iserver_zfs_packages }}"
    state: present
    default_release: buster-backports
  when: iszfs is defined

# This is done rather than as part of the package install, as Debian's version doesn't handle
# ZFS pre-allocation correctly. This can be removed when Debian includes >= v1.48.
- name: Ensure that rclone is installed.
  shell: curl -fsSl https://rclone.org/install.sh | bash
  args:
    warn: no
