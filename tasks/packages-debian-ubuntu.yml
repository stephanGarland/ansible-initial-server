### BASE PACKAGES ###
# Debian, Ubuntu

- name: Check for dev role.
  vars:
    vm_role: "{{ vm_role }}"
  command: echo vm_role
  register: isdev
  when: vm_role is search('dev')

- name: Check for zfs support.
  vars:
    vm_zfs: "{{ vm_zfs }}"
  command: echo vm_zfs
  register: iszfs
  when: vm_zfs is search('true')

# replaces sources.list repos.
- name: Move original /etc/apt/sources.list to back it up (once).
  command: mv /etc/apt/sources.list /etc/apt/sources.list.original
  args:
    creates: /etc/apt/sources.list.original

# this expects python-apt to be installed.
# at least two repos need to be defined. repos are added to sources.list.d/
- name: Add a set of specified repositories into sources list directory.
  apt_repository:
    repo: "{{ item }}"
    state: present
  loop: "{{ iserver_debian_repos }}"
  when: ansible_distribution == 'Debian'

- name: Add a set of specified repositories into sources list directory.
  apt_repository:
    repo: "{{ item }}"
    state: present
  loop: "{{ iserver_ubuntu_repos }}"
  when: ansible_distribution == 'Ubuntu'

# so that Ubuntu will not complain about missing sources.list
- name: Ensure that there is a sources.list file.
  copy:
    src: sources.list
    dest: /etc/apt/sources.list
    force: no

- name: Add Docker repo key.
  apt_key:
    url: https://download.docker.com/linux/debian/gpg
    state: present
  when: (ansible_distribution == 'Debian') and (isdev | bool == 'true')

- name: Add Hashicorp repo key.
  apt_key:
    url: https://apt.releases.hashicorp.com/gpg
    state: present
  when: (ansible_distribution == 'Debian') and (isdev | bool == 'true')

- name: Add Helm repo key.
  apt_key:
    url: https://baltocdn.com/helm/signing.asc
    state: present
  when: (ansible_distribution == 'Debian') and (isdev | bool == 'true')

- name: Add GCloud repo key.
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    state: present
  when: (ansible_distribution == 'Debian') and (isdev | bool == 'true')

- name: Add custom repositories into sources list directory.
  apt_repository:
    repo: "{{ item }}"
    state: present
  loop: "{{ iserver_debian_custom_repos }}"
  when: (ansible_distribution == 'Debian') and (isdev | bool == 'true')

- name: Add ZFS repositories into sources list directory.
  apt_repository:
    repo: "{{ item }}"
    state: present
  loop: "{{ iserver_debian_zfs_repos }}"
  when: (ansible_distribution == 'Debian') and (iszfs | bool == 'true')

- name: Ensure that all packages are updated and upgraded.
  apt:
    upgrade: "yes"
    update_cache: yes
    cache_valid_time: 86400 #One day

- name: Ensure that initial packages are installed.
  apt:
    name: "{{ iserver_deb_packages }}"
    state: present

- name: Ensure that custom packages are installed.
  apt:
    name: "{{ iserver_custom_packages }}"
    state: present
  when: isdev | bool == 'true'

- name: Ensure that Linux headers are installed.
  apt:
    name: "linux-headers-{{ ansible_kernel }}"
    state: present
  when: (isdev | bool == 'true') or (iszfs | bool == 'true')

- name: Ensure that micro is installed.
  shell: curl -fsSl https://getmic.ro | bash && mv micro /usr/local/bin
  args:
    warn: no

- name: Ensure that Python libraries are installed.
  vars:
      ansible_python_interpreter: /usr/bin/python3
  pip:
    name: "{{ iserver_pip_packages }}"
    state: present
  when: isdev | bool == 'true'

- name: Ensure that Golang is installed.
  unarchive:
    src: https://golang.org/dl/go1.15.6.linux-amd64.tar.gz
    dest: /usr/local
    remote_src: yes
  when: isdev | bool == 'true'

- name: Add GOPATH to system path.
  vars:
    extra_path: /usr/local/go/bin
  lineinfile:
    path: /etc/environment
    line: "PATH={{ extra_path }}:$PATH"
  when: isdev | bool == 'true'

- name: Ensure that Terragrunt is installed.
  get_url:
    url: https://github.com/gruntwork-io/terragrunt/releases/download/v0.26.7/terragrunt_linux_amd64
    dest: /usr/local/bin
  when: isdev | bool == 'true'

- name: Ensure that ZFS On Linux pre-requisite is installed.
  apt:
    name: zfs-dkms
    state: present
    default_release: buster-backports
    install_recommends: no
  when: (ansible_distribution == 'Debian') and (iszfs | bool == 'true')

- name: Add the ZFS module.
  modprobe:
    name: zfs
    state: present
  when: (ansible_distribution == 'Debian') and (iszfs | bool == 'true')

- name: Ensure that ZFS On Linux is installed.
  apt:
    name: zfsutils-linux
    state: present
    default_release: buster-backports
  when: (ansible_distribution == 'Debian') and (iszfs | bool == 'true')

# This is done via the install script rather than as part of the package install,
# as Debian's version doesn't handle ZFS pre-allocation correctly.
# This can be removed when Debian includes >= v1.48.
- name: Ensure that rclone is installed.
  shell: curl -fsSl https://rclone.org/install.sh | bash
  args:
    warn: no
